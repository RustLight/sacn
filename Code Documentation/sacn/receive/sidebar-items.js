initSidebarItems({"constant":[["AF_INET","The libc constants required are not available on many windows environments and therefore are hard-coded. Defined as per https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-socket"],["AF_INET6","Defined as per https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-socket"],["ANNOUNCE_SOURCE_DISCOVERY_DEFAULT","The default value of the announce_source_discovery flag. Defaults to false based on the assumption that often receivers won't have any immediate response/checks to do on a source announcing itself (every source does this approximately every 10 seconds as per the E131_DISCOVERY_INTERVAL)."],["ANNOUNCE_STREAM_TERMINATION_DEFAULT","The default value of the announce_stream_termination flag. Defaults to false based on the assumption that often receivers will want to ignore termination from a source based on there being multiple possible sources."],["ANNOUNCE_TIMEOUT_DEFAULT","The default value of the announce_timeout flag."],["DEFAULT_MERGE_FUNC","If a packet for a universe is waiting to be synchronised and then another packet is received with the same universe and synchronisation address this situation must be handled. By default the implementation discards the lowest priority packet and if equal priority it discards the oldest packet as per ANSI E1.31-2018 Section 6.2.3."],["DMX_PAYLOAD_SIZE","DMX payload size in bytes (512 bytes of data + 1 byte start code)."],["INITIAL_SEQUENCE_NUMBER","The sequence number assigned by the receiver to a new source before it has processed the sequence numbers of any data from that source."],["PROCESS_PREVIEW_DATA_DEFAULT","The default value of the process_preview_data flag."],["RCV_BUF_DEFAULT_SIZE","The default size of the buffer used to receive E1.31 packets. 1143 bytes is biggest packet required as per Section 8 of ANSI E1.31-2018, aligned to 64 bit that is 1144 bytes."]],"fn":[["check_seq_number","Checks the given sequence number for the given universe against the given expected sequence numbers."],["check_timeouts","Checks the timeouts for all sources and universes for the given sequences. Removes any universes for which the last_recv time was at least the given timeout amount of time ago. Any sources which have no universes after this operation are also removed."],["create_win_socket","Creates a new Socket2 socket bound to the given address."],["discard_lowest_priority_then_previous","The default merge action for the receiver."],["find_discovered_src","Searches for the discovered source with the given name in the given vector of discovered sources and returns the index of the src in the Vec or None if not found."],["htp_dmx_merge","Performs a highest takes priority (HTP) (per byte) DMX merge of data."],["join_win_multicast","Joins the multicast group with the given address using the given socket on the windows operating system."],["leave_win_multicast","Leaves the multicast group with the given address using the given socket."],["remove_source_universe_seq","Removes the sequence number entry from the given sequences for the given source cid and universe."]],"struct":[["DMXData","Holds a universes worth of DMX data."],["DiscoveredSacnSource","Represents an sACN source/sender on the network that has been discovered by this sACN receiver by receiving universe discovery packets."],["SacnNetworkReceiver","Used for receiving dmx or other data on a particular universe using multicast."],["SacnReceiver","Allows receiving dmx or other (different startcode) data using sacn."],["SequenceNumbering","Stores information about the current expected sequence numbers for each source, universe and packet type."],["TimedStampedSeqNo","Stores a sequence number and a timestamp."],["UniversePage","Universe discovery packets are broken down into pages to allow sending a large list of universes, each page contains a list of universes and which page it is. The receiver then puts the pages together to get the complete list of universes that the discovered source is sending on."]]});