initSidebarItems({"constant":[["ACTION_ANNOUNCE_DISCOVERED","The string given by the user to enable universe discovery packets to be announced when received."],["ACTION_ANNOUNCE_TERMINATION","The string given by the user to cause termination packets to be announced. \"e\" for end."],["ACTION_FILE_OUT","The string given by the user to cause the receiver to output data to a file."],["ACTION_HELP","The string given by the user to display the help."],["ACTION_IGNORE","Lines of input starting with this string are ignored. This is commonly used within the automated tests to allow comments within the input files."],["ACTION_LISTEN_UNIVERSE","The string given by the user to start listening to a specific universe of data."],["ACTION_PREVIEW","The string given by the user to enable receiving preview data."],["ACTION_PRINT_DISCOVERED_SOURCES","The string given by the user to cause the receiver to display the sources which have currently been discovered."],["ACTION_PRINT_DISCOVERED_SOURCES_NO_TIMEOUT","The string given by the user to cause the receiver to display the sources which have been discovered but without checking for timeouts first. This is usually used as part of debugging / tests."],["ACTION_QUIT","The string given by the user to quit the receiver. "],["ACTION_RECV","The string given by the user to receive data."],["ACTION_RECV_CONTINUOUS","The string given by the user to receive data continously."],["ACTION_SLEEP","The string given by the user to cause the receiver to sleep/block for a given time. This is used as part of tests as a way to encourage a specific ordering of concurrent events by having one side way for a period. This is discussed in more detail within the specific tests. "],["ACTION_STOP_LISTEN_UNIVERSE","The string given by the user to terminate listening to a specific universe of data."],["WRITE_TO_FILE_HEADERS","The headers used for the top of the file when the FILE_OUT action is used."]],"fn":[["create_values_str","Converts the given array of u8 values into a comma separated string."],["display_help","Displays the usage/help string to stdout."],["get_usage_str","Describes the various commands / command-line arguments available and what they do. Displayed to the user if they ask for help or enter an unrecognised input. Not a const as const with format! not supported in rust."],["handle_input","Handle a line of input on stdin to the program. Returns true if there is more input expected and false if not."],["main","The entry point of the demo_rcv. Usage is described in get_usage_str or by running the program and typing \"h\" or \"help\"."],["print_data","Prints the given data to stdout in the format [{{ Universe(s): x, Sync_Universe: y, Values: z }}, ...] where x is the universe, y is the synchronisation address and z is the values. The ... indicates that there may be multiple bits of data to print at once which follows the same format."],["print_discovered_sources","Prints the given array of discovered sources to std out. Uses the format \"Name: x, Universes: y\" where x is the source name and y is the universes registered to the  source. "],["print_recv","Prints the given output from recv to stdout. Errors are printed using their debug output except for universe terminated which is printed as \"Universe x Terminated\" where x is the universe. This  is to avoid the CID being printed which changes for every test as it is randomly generated in most tests."],["write_to_file","Writes the given data to the given file (uses the given data_id as first column). Uses comma separated values."]],"mod":[["error","The demo itself utilises a small error-chain which wraps the errors from the sACN crate and a few standard crates."]]});