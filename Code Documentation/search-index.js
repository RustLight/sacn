var N=null,E="",T="t",U="u",searchIndex={};
var R=["socket","socketaddr","result","dmxdata","string","error","errorkind","backtrace","chain_err","description","demo_rcv","demo_rcv::error::errors","to_string","try_from","try_into","borrow_mut","formatter","from_kind","with_chain","internalbacktrace","ErrorKind","ResultExt","get_usage_str","Describes the various commands / command-line arguments…","display_help","sacnsource","option","handle_input","Import the error-chain handling into the module.","Use the error-chain system to allow handling IO and sACN…","The Error type.","The kind of the error.","Contains the error chain and the backtrace.","The kind of an error.","A convenient variant for String.","__Nonexhaustive","Convenient wrapper around `std::Result`.","Additional methods for `Result`, for easy interaction with…","If the `Result` is an `Err` then `chain_err` evaluates the…","Constructs an error from a kind, and generates a backtrace.","Constructs a chained error from another error and a kind,…","with_boxed_chain","Construct a chained error from another boxed error and a…","Returns the kind of the error.","Iterates over the error chain.","Returns the backtrace associated with this error.","Extends the error chain with a new entry.","A short description of the error. This method is identical…","A string describing the error kind.","demo_src","The string given by the user to perform each of the…","ACTION_IGNORE","The start addresses for each of the fixtures in the…","demo_src::error::errors","type_id","extract_backtrace","sacn_parse_pack_error","sequence_number","synchronization_address","source_name","sockaddr","The E1.31 packet vector field value used to identify the…","acnrootlayerprotocol","preview_data","universes","mutexguard","Returns the locked internal SacnSourceInternal used within…","sacnsourceinternal","Constructs a new SacnSource with the given name, binding…","Constructs a new SacnSource with the given name and…","with_cid_ip","set_is_sending_discovery","Sets the is_sending_discovery flag to the given value.","register_universes","register_universe","Checks if the given universe is a valid universe to send…","Sends the given data to the given universes with the given…","send_sync_packet","Sends a synchronisation packet to trigger the sending of…","terminate_stream","Returns the ACN CID device identifier of the…","Sets the ACN CID device identifier.","Returns the ACN source name.","set_name","Sets ACN source name.","preview_mode","set_preview_mode","Sets the value of the Preview_Data flag in packets from…","set_multicast_ttl","Sets the multicast time to live.","multicast_ttl","Returns the multicast time to live of the socket.","set_multicast_loop_v4","Sets if multicast loop is enabled.","multicast_loop","Returns true if multicast loop is enabled, false if not.","universe","priority","last_page","data_sequences","The sequence numbers used for data packets, keeps a…","sync_sequences","sacnreceiver","is_multicast_enabled","duration","discoveredsacnsource","sacnnetworkreceiver","set_is_multicast_enabled","Sets the value of the is_multicast_enabled flag to the…","Returns true if multicast is enabled on this receiver and…","check_timeouts","sacn::sacn_parse_pack_error::sacn_parse_pack_error","sacn::error::errors","sacn::packet","clone_into","to_owned","sacn::source","sacn::receive","e131rootlayer","datapacketframinglayer","datapacketdmplayer","synchronizationpacketframinglayer","universediscoverypacketframinglayer","universediscoverypacketuniversediscoverylayer","timedstampedseqno","assert_receiver_is_total_eq","universepage","e131rootlayerdata","ordering","partial_cmp","AcnRootLayerProtocol","E131RootLayer","DataPacketFramingLayer","DataPacketDmpLayer","SynchronizationPacketFramingLayer","UniverseDiscoveryPacketFramingLayer","UniverseDiscoveryPacketUniverseDiscoveryLayer","E131RootLayerData","SacnSource","SacnSourceInternal","SacnReceiver","DiscoveredSacnSource","SacnNetworkReceiver","UniversePage","TimedStampedSeqNo","SequenceNumbering","Returns the current Time To Live for unicast packets send…","Returns the universes currently registered on this source."];
searchIndex["demo_rcv"]={"doc":"An example demo sACN receiver which utilises the sACN…","i":[[5,R[22],R[10],R[23],N,[[],[R[4]]]],[5,"main",E,E,N,[[]]],[5,R[27],E,"Handle a line of input on stdin to the program. Returns…",N,[[[R[102]]],[["bool"],[R[2],["bool"]]]]],[5,"write_to_file",E,"Writes the given data to the given file (uses the given…",N,[[["u64"],["vec",[R[3]]],["box"],[R[3]]],[R[2]]]],[5,"create_values_str",E,"Converts the given array of u8 values into a comma…",N,[[["u8"],["vec",["u8"]]],[[R[2],[R[4]]],[R[4]]]]],[5,"print_recv",E,E,N,[[[R[2],["vec"]],["vec",[R[3]]]]]],[5,"print_data",E,E,N,[[[R[3]],["vec",[R[3]]]]]],[5,"print_discovered_sources",E,E,N,[[["vec"]]]],[5,R[24],E,E,N,[[]]],[0,R[5],E,R[28],N,N],[0,"errors","demo_rcv::error",R[29],N,N],[3,"Error",R[11],R[30],N,N],[12,"0",E,R[31],0,N],[12,"1",E,R[32],0,N],[4,R[20],E,R[33],N,N],[13,"Sacn",E,E,1,N],[13,"Io",E,E,1,N],[13,"Msg",E,R[34],1,N],[13,R[35],E,E,1,N],[6,"Result",E,R[36],N,N],[8,R[21],E,R[37],N,N],[10,R[8],E,R[38],2,[[["f"]],[[R[2],[R[5]]],[R[5]]]]],[11,R[17],E,R[39],0,[[[R[6]]],[R[5]]]],[11,R[18],E,R[40],0,[[["e"],["k"]],[R[5]]]],[11,R[41],E,R[42],0,[[[R[5]],["box",[R[5]]],["k"]],[R[5]]]],[11,"kind",E,R[43],0,[[["self"]],[R[6]]]],[11,"iter",E,R[44],0,[[["self"]],["iter"]]],[11,R[7],E,R[45],0,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[8],E,R[46],0,[[["f"]],[R[5]]]],[11,R[9],E,R[47],0,[[["self"]],["str"]]],[11,R[9],E,R[48],1,[[["self"]],["str"]]],[17,"ACTION_RECV",R[10],R[50],N,N],[17,"ACTION_RECV_CONTINUOUS",E,E,N,N],[17,"ACTION_PRINT_DISCOVERED_SOURCES",E,E,N,N],[17,"ACTION_PRINT_DISCOVERED_SOURCES_NO_TIMEOUT",E,E,N,N],[17,"ACTION_QUIT",E,E,N,N],[17,"ACTION_HELP",E,E,N,N],[17,"ACTION_LISTEN_UNIVERSE",E,E,N,N],[17,"ACTION_STOP_LISTEN_UNIVERSE",E,E,N,N],[17,"ACTION_SLEEP",E,E,N,N],[17,"ACTION_PREVIEW",E,E,N,N],[17,"ACTION_ANNOUNCE_DISCOVERED",E,E,N,N],[17,R[51],E,E,N,N],[17,"ACTION_FILE_OUT",E,E,N,N],[17,"ACTION_ANNOUNCE_TERMINATION",E,E,N,N],[17,"WRITE_TO_FILE_HEADERS",E,"The headers used for the top of the file when the FILE_OUT…",N,N],[11,"into",R[11],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[4]]]],[11,R[13],E,E,0,[[[U]],[R[2]]]],[11,R[14],E,E,0,[[],[R[2]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[54],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[4]]]],[11,R[13],E,E,1,[[[U]],[R[2]]]],[11,R[14],E,E,1,[[],[R[2]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[54],E,E,1,[[["self"]],["typeid"]]],[11,"from",E,E,0,[[[R[5]]],["self"]]],[11,"from",E,E,0,[[[R[5]]],["self"]]],[11,"from",E,E,0,[[[R[6]]],["self"]]],[11,"from",E,E,1,[[[R[5]]],["self"]]],[11,"from",E,E,1,[[["str"]],["self"]]],[11,"from",E,E,1,[[[R[4]]],["self"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[[R[4]]],["self"]]],[11,"fmt",E,E,0,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[16]],["self"]],[R[2]]]],[11,R[9],E,E,0,[[["self"]],["str"]]],[11,"source",E,E,0,[[["self"]],[[R[26],[R[5]]],[R[5]]]]],[11,"new",E,E,0,[[[R[6]],["state"]],[R[5]]]],[11,R[17],E,E,0,[[],["self"]]],[11,R[18],E,E,0,[[["e"],["k"]],["self"]]],[11,"kind",E,E,0,[[["self"]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[8],E,E,0,[[["f"]],["self"]]],[11,R[7],E,E,0,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[55],E,E,0,[[[R[5]]],[[R[26],[R[19]]],[R[19]]]]]],"p":[[3,"Error"],[4,R[20]],[8,R[21]]]};
searchIndex["demo_src"]={"doc":"An example demo sACN source which utilises the sACN library.","i":[[5,R[22],R[49],R[23],N,[[],[R[4]]]],[5,"main",E,E,N,[[]]],[5,R[24],E,E,N,[[]]],[5,"handle_full_data_option",E,E,N,[[[R[25]],["vec",["str"]],["str"]],[["bool"],[R[2],["bool"]]]]],[5,"handle_all_data_option",E,E,N,[[[R[25]],["vec",["str"]],["str"]],[["bool"],[R[2],["bool"]]]]],[5,"handle_data_option",E,E,N,[[[R[25]],["vec",["str"]],["str"]],[["bool"],[R[2],["bool"]]]]],[5,"handle_unicast_option",E,E,N,[[[R[25]],["vec",["str"]],["str"]],[["bool"],[R[2],["bool"]]]]],[5,"handle_data_over_time_option",E,E,N,[[[R[25]],["vec",["str"]],["str"]],[["bool"],[R[2],["bool"]]]]],[5,"handle_test_preset_option",E,E,N,[[[R[25]],["vec",["str"]],["str"]],[["bool"],[R[2],["bool"]]]]],[5,"run_test_2_universes_distinct_values",E,"Runs a test where the 2 given universes are constantly…",N,[[[R[25]],["u8"],["u16"],[R[26],[R[1]]],[R[1]]],[R[2]]]],[5,"run_test_moving_channel_preset",E,E,N,[[[R[25]],["u16"]],[R[2]]]],[5,"run_test_rapid_changes_preset",E,E,N,[[[R[25]],["u16"]],[R[2]]]],[5,"run_test_high_data_rate",E,E,N,[[[R[25]],["u16"]],[R[2]]]],[5,"run_acceptance_test_demo",E,"Runs the acceptance test sender to vision visualiser demo.",N,[[[R[25]]],[R[2]]]],[5,"gen_acceptance_test_step_1",E,"Step 1, Backlight + Front On at full.",N,[[]]],[5,"gen_acceptance_test_step_1_backlight_state",E,"The backlights use 16 dmx channels each. The usage of each…",N,[[]]],[5,"gen_acceptance_test_step_1_frontlight_state",E,"The front-lights only use a single channel which is…",N,[[]]],[5,"gen_acceptance_test_step_2",E,"Step 2, Red",N,[[]]],[5,"gen_acceptance_test_step_2_backlight_state",E,"Apply the changes to the backlight fixtures for step 2…",N,[[]]],[5,"gen_acceptance_test_step_3",E,"Step 3, Blue",N,[[]]],[5,"gen_acceptance_test_step_3_backlight_state",E,"Apply the changes to the backlight fixtures for step 3…",N,[[]]],[5,"gen_acceptance_test_step_4",E,"Step 4, All Off",N,[[]]],[5,"gen_acceptance_test_step_4_backlight_state",E,"Apply the changes to the backlight fixtures for step 4…",N,[[]]],[5,"gen_acceptance_test_step_4_frontlight_state",E,"Apply the changes to the frontlight fixtures for step 4…",N,[[]]],[5,R[27],E,"Returns Ok(true) to continue or Ok(false) if no more input.",N,[[[R[25]]],[["bool"],[R[2],["bool"]]]]],[0,R[5],E,R[28],N,N],[0,"errors","demo_src::error",R[29],N,N],[3,"Error",R[53],R[30],N,N],[12,"0",E,R[31],0,N],[12,"1",E,R[32],0,N],[4,R[20],E,R[33],N,N],[13,"Sacn",E,E,1,N],[13,"Io",E,E,1,N],[13,"BoolStr",E,E,1,N],[13,"Msg",E,R[34],1,N],[13,R[35],E,E,1,N],[6,"Result",E,R[36],N,N],[8,R[21],E,R[37],N,N],[10,R[8],E,R[38],2,[[["f"]],[[R[5]],[R[2],[R[5]]]]]],[11,R[17],E,R[39],0,[[[R[6]]],[R[5]]]],[11,R[18],E,R[40],0,[[["e"],["k"]],[R[5]]]],[11,R[41],E,R[42],0,[[[R[5]],["box",[R[5]]],["k"]],[R[5]]]],[11,"kind",E,R[43],0,[[["self"]],[R[6]]]],[11,"iter",E,R[44],0,[[["self"]],["iter"]]],[11,R[7],E,R[45],0,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[8],E,R[46],0,[[["f"]],[R[5]]]],[11,R[9],E,R[47],0,[[["self"]],["str"]]],[11,R[9],E,R[48],1,[[["self"]],["str"]]],[17,"TERMINATE_START_CODE",R[49],"The start code used in termination packets.",N,N],[17,"SHAPE_DATA_SEND_PERIOD",E,"The period between updates to the values send during the…",N,N],[17,"ACTION_PREVIEW_OPTION",E,R[50],N,N],[17,"ACTION_DATA_OPTION",E,E,N,N],[17,"ACTION_FULL_DATA_OPTION",E,E,N,N],[17,"ACTION_UNICAST_OPTION",E,E,N,N],[17,"ACTION_REGISTER_OPTION",E,E,N,N],[17,"ACTION_TERMINATE_OPTION",E,E,N,N],[17,"ACTION_SLEEP_OPTION",E,E,N,N],[17,"ACTION_SYNC_OPTION",E,E,N,N],[17,"ACTION_UNICAST_SYNC_OPTION",E,E,N,N],[17,"ACTION_DATA_OVER_TIME_OPTION",E,E,N,N],[17,"ACTION_TEST_PRESENT_OPTION",E,E,N,N],[17,R[51],E,E,N,N],[17,"ACTION_ALL_DATA_OPTION",E,E,N,N],[17,"TEST_PRESET_TWO_UNIVERSE",E,"The test preset numbers which correspond to the various…",N,N],[17,"TEST_PRESET_TWO_UNIVERSE_UNICAST",E,E,N,N],[17,"TEST_PRESET_MOVING_CHANNELS",E,E,N,N],[17,"TEST_PRESET_RAPID_CHANGES",E,E,N,N],[17,"TEST_PRESET_HIGH_DATA_RATE",E,E,N,N],[17,"TEST_PRESET_ACCEPTANCE_TEST",E,"Test preset number for acceptance test 100. ",N,N],[17,"TEST_PRESET_DURATION",E,"The duration of one of the preset tests. Each preset test…",N,N],[17,"TEST_PRESET_HIGH_DATA_RATE_UNI_COUNT",E,"The number of universes to send on during the high data…",N,N],[17,"MOVING_CHANNEL_TEST_WAVE_PERIOD",E,"The period of the wave used in the test moving channel…",N,N],[17,"MOVING_CHANNEL_TEST_WAVE_OFFSET",E,"The offset between each channel in the wave used in the…",N,N],[17,"TEST_PRESET_UPDATE_PERIOD",E,"The minimum length of time to wait between sending data…",N,N],[17,"TEST_PRESET_RAPID_CHANGE_PERIOD",E,"The period of the square wave generated as part of this…",N,N],[17,"TEST_PRESET_HIGH_DATA_RATE_VARIATION_RANGE",E,"The range of values for each universe within the high data…",N,N],[17,"ACCEPT_TEST_UNI_1",E,"The 2 universes used for the acceptance test. UNI_1…",N,N],[17,"ACCEPT_TEST_UNI_2",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_1",E,R[52],N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_2",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_3",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_4",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_5",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_6",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_7",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_ADDR_8",E,E,N,N],[17,"ACCEPT_TEST_FRONTLIGHT_ADDR_1",E,R[52],N,N],[17,"ACCEPT_TEST_FRONTLIGHT_ADDR_2",E,E,N,N],[17,"ACCEPT_TEST_FRONTLIGHT_ADDR_3",E,E,N,N],[17,"ACCEPT_TEST_BACKLIGHT_CH_COUNT",E,"The number of addresses taken up by the backlights in the…",N,N],[17,"ACCEPT_TEST_FRONTLIGHT_CH_COUNT",E,"The number of addresses taken up by the frontlights in the…",N,N],[17,"ACCEPT_TEST_DURATION",E,"The time the acceptance test sequence should keep cycling…",N,N],[11,"into",R[53],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[4]]]],[11,R[13],E,E,0,[[[U]],[R[2]]]],[11,R[14],E,E,0,[[],[R[2]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[54],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[4]]]],[11,R[13],E,E,1,[[[U]],[R[2]]]],[11,R[14],E,E,1,[[],[R[2]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[54],E,E,1,[[["self"]],["typeid"]]],[11,"from",E,E,0,[[[R[5]]],["self"]]],[11,"from",E,E,0,[[[R[5]]],["self"]]],[11,"from",E,E,0,[[["parseboolerror"]],["self"]]],[11,"from",E,E,0,[[[R[6]]],["self"]]],[11,"from",E,E,1,[[[R[5]]],["self"]]],[11,"from",E,E,1,[[["str"]],["self"]]],[11,"from",E,E,1,[[[R[4]]],["self"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[[R[4]]],["self"]]],[11,"fmt",E,E,0,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,0,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[16]],["self"]],[R[2]]]],[11,R[9],E,E,0,[[["self"]],["str"]]],[11,"source",E,E,0,[[["self"]],[[R[26],[R[5]]],[R[5]]]]],[11,"new",E,E,0,[[[R[6]],["state"]],[R[5]]]],[11,R[17],E,E,0,[[],["self"]]],[11,R[18],E,E,0,[[["e"],["k"]],["self"]]],[11,"kind",E,E,0,[[["self"]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[8],E,E,0,[[["f"]],["self"]]],[11,R[7],E,E,0,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[55],E,E,0,[[[R[5]]],[[R[26],[R[19]]],[R[19]]]]]],"p":[[3,"Error"],[4,R[20]],[8,R[21]]]};
searchIndex["mcast_simple"]={"doc":E,"i":[[5,"main","mcast_simple",E,N,[[]]],[5,"new_win_socket",E,"addr: Bind address.",N,[[[R[1]]],[[R[2],[R[0]]],[R[0]]]]],[5,"new_unix_socket",E,"addr: The multicast address to bind to.",N,[[[R[1]]],[[R[2],[R[0]]],[R[0]]]]]],"p":[]};
searchIndex["sacn"]={"doc":"Implementation of sACN network protocol.","i":[[0,R[56],"sacn","The errors within the sACN crate related to parse/pack…",N,N],[0,R[56],"sacn::sacn_parse_pack_error","The errors used within the SacnLibrary specifically those…",N,N],[3,"Error",R[111],R[30],N,N],[12,"0",E,R[31],0,N],[12,"1",E,R[32],0,N],[4,R[20],E,R[33],N,N],[13,"Msg",E,R[34],1,N],[13,"ParseInvalidData",E,"When parsing packet invalid data encountered.",1,N],[13,"ParseInvalidPriority",E,"Attempted to parse a priority value that is outwith the…",1,N],[13,"ParseInvalidPage",E,"Attempted to parse a page value that is invalid - e.g. the…",1,N],[13,"ParseInvalidSyncAddr",E,"Attempted to parse a sync address value that is outwith…",1,N],[13,"ParseInvalidUniverse",E,"Attempted to parse a universe value that is outwith the…",1,N],[13,"ParseInvalidUniverseOrder",E,"Attempted to parse a packet with an invalid ordering of…",1,N],[13,"PackInvalidData",E,"When packing a packet into a buffer invalid data…",1,N],[13,"PackBufferInsufficient",E,"Supplied buffer is not large enough to pack packet into.",1,N],[13,"ParseInsufficientData",E,"Supplied buffer does not contain enough data.",1,N],[13,"ParsePduInvalidFlags",E,"Received PDU flags are invalid for parsing.",1,N],[13,"PduInvalidLength",E,"Received PDU length is invalid.",1,N],[13,"PduInvalidVector",E,"Received PDU vector is invalid/unsupported by this library.",1,N],[13,"UuidError",E,"Error parsing the received UUID.",1,N],[13,"Utf8Error",E,"Error parsing received UTF8 string.",1,N],[13,"SourceNameInvalid",E,"Source name in packet was invalid, for example due to not…",1,N],[13,R[35],E,E,1,N],[6,"Result",E,R[36],N,N],[8,R[21],E,R[37],N,N],[10,R[8],E,R[38],2,[[["f"]],[[R[2],[R[5]]],[R[5]]]]],[11,R[17],E,R[39],0,[[[R[6]]],[R[5]]]],[11,R[18],E,R[40],0,[[["e"],["k"]],[R[5]]]],[11,R[41],E,R[42],0,[[[R[5]],["box",[R[5]]],["k"]],[R[5]]]],[11,"kind",E,R[43],0,[[["self"]],[R[6]]]],[11,"iter",E,R[44],0,[[["self"]],["iter"]]],[11,R[7],E,R[45],0,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[8],E,R[46],0,[[["f"]],[R[5]]]],[11,R[9],E,R[47],0,[[["self"]],["str"]]],[11,R[9],E,R[48],1,[[["self"]],["str"]]],[0,R[5],"sacn","The errors used within the sACN crate, parse/pack errors…",N,N],[0,"errors","sacn::error","The errors used within the SacnLibrary. The ErrorKind…",N,N],[3,"Error",R[112],R[30],N,N],[12,"0",E,R[31],3,N],[12,"1",E,R[32],3,N],[4,R[20],E,R[33],N,N],[13,"SacnParsePackError",E,E,4,N],[13,"Io",E,E,4,N],[13,"Str",E,E,4,N],[13,"Uuid",E,E,4,N],[13,"Msg",E,R[34],4,N],[13,"MalformedSourceName",E,"Returned to indicate that an invalid or malformed source…",4,N],[13,"InvalidPriority",E,"Attempted to perform an action using a priority value that…",4,N],[13,"SourcesExceededError",E,"Used to indicate that the limit for the number of…",4,N],[13,"SourceDiscovered",E,"A source was discovered by a receiver with the…",4,N],[13,"ExceedUniverseCapacity",E,"Attempted to exceed the capacity of a single universe…",4,N],[13,"IllegalUniverse",E,"Attempted to use illegal universe, outwith allowed range…",4,N],[13,"UniverseNotRegistered",E,"Attempted to use a universe that wasn't first registered…",4,N],[13,"IpVersionError",E,"Ip version (ipv4 or ipv6) used when the other is expected.",4,N],[13,"UnsupportedIpVersion",E,"Attempted to use an unsupported (not Ipv4 or Ipv6) IP…",4,N],[13,"SenderAlreadyTerminated",E,"Attempted to use a sender which has already been terminated.",4,N],[13,"DmxMergeError",E,"An error was encountered when attempting to merge DMX data…",4,N],[13,"OutOfSequence",E,"Packet was received out of sequence and so should be…",4,N],[13,"UniverseTerminated",E,"A source terminated a universe and this was detected when…",4,N],[13,"UniverseTimeout",E,"A source universe timed out as no data was received on…",4,N],[13,"UniverseNotFound",E,"When looking for a specific universe it wasn't found. This…",4,N],[13,"SourceNotFound",E,"Attempted to find a source and failed. This might happen…",4,N],[13,"OsOperationUnsupported",E,"Thrown to indicate that the operation attempted is…",4,N],[13,"SourceCorrupt",E,"Thrown to indicate that the source has corrupted for the…",4,N],[13,R[35],E,E,4,N],[6,"Result",E,R[36],N,N],[8,R[21],E,R[37],N,N],[10,R[8],E,R[38],5,[[["f"]],[[R[5]],[R[2],[R[5]]]]]],[11,R[17],E,R[39],3,[[[R[6]]],[R[5]]]],[11,R[18],E,R[40],3,[[["e"],["k"]],[R[5]]]],[11,R[41],E,R[42],3,[[[R[5]],["box",[R[5]]],["k"]],[R[5]]]],[11,"kind",E,R[43],3,[[["self"]],[R[6]]]],[11,"iter",E,R[44],3,[[["self"]],["iter"]]],[11,R[7],E,R[45],3,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[8],E,R[46],3,[[["f"]],[R[5]]]],[11,R[9],E,R[47],3,[[["self"]],["str"]]],[11,R[9],E,R[48],4,[[["self"]],["str"]]],[0,"packet","sacn","The packet module handles the sACN packets including…",N,N],[3,R[130],R[113],"Root layer protocol of the Architecture for Control…",N,N],[12,"pdu",E,"The PDU this packet carries.",6,N],[3,"PduInfo",E,"Represents the data contained with the PduInfo section…",N,N],[12,"length",E,"The length in bytes of this layer inclusive of the PduInfo.",7,N],[12,"vector",E,"The vector which indicates what the layer is, context…",7,N],[3,R[131],E,"Root layer protocol data unit (PDU).",N,N],[12,"cid",E,"Sender UUID.",8,N],[12,"data",E,"Data carried by the Root Layer PDU.",8,N],[3,R[132],E,"Framing layer PDU for sACN data packets.",N,N],[12,R[59],E,"The name of the source.",9,N],[12,R[97],E,"Priority of this data packet.",9,N],[12,R[58],E,"Synchronization address.",9,N],[12,R[57],E,"The sequence number of this packet.",9,N],[12,R[63],E,"If this packets data is preview data.",9,N],[12,"stream_terminated",E,"If transmission on this universe is terminated.",9,N],[12,"force_synchronization",E,"Force synchronization if no synchronization packets are…",9,N],[12,R[96],E,"The universe DMX data is transmitted for.",9,N],[12,"data",E,"DMP layer containing the DMX data.",9,N],[3,R[133],E,"Device Management Protocol PDU with SET PROPERTY vector.",N,N],[12,"property_values",E,"DMX data property values (DMX start coder + 512 slots).",10,N],[3,R[134],E,"sACN synchronization packet PDU.",N,N],[12,R[57],E,"The sequence number of the packet.",11,N],[12,R[58],E,"The address to synchronize.",11,N],[3,R[135],E,"Framing layer PDU for sACN universe discovery packets.",N,N],[12,R[59],E,"Name of the source.",12,N],[12,"data",E,"Universe discovery layer.",12,N],[3,R[136],E,"Universe discovery layer PDU.",N,N],[12,"page",E,"Current page of the discovery packet.",13,N],[12,R[98],E,"The number of the final page.",13,N],[12,R[64],E,"List of universes.",13,N],[4,R[137],E,"Payload of the Root Layer PDU.",N,N],[13,"DataPacket",E,"DMX data packet.",14,N],[13,"SynchronizationPacket",E,"Synchronization packet.",14,N],[13,"UniverseDiscoveryPacket",E,"Universe discovery packet.",14,N],[5,"universe_to_ipv4_multicast_addr",E,"Converts the given ANSI E1.31-2018 universe into an Ipv4…",N,[[["u16"]],[[R[60]],[R[2],[R[60]]]]]],[5,"universe_to_ipv6_multicast_addr",E,"Converts the given ANSI E1.31-2018 universe into an Ipv6…",N,[[["u16"]],[[R[60]],[R[2],[R[60]]]]]],[5,"is_universe_in_range",E,R[75],N,[[["u16"]],[R[2]]]],[5,"zeros",E,"Fills the given array of bytes with the given length n…",N,[[["usize"]]]],[5,"parse_source_name_str",E,"Takes the given byte buffer (e.g. a c char array) and…",N,[[],[["str"],[R[2],["str"]]]]],[5,"pdu_info",E,"Takes the given byte buffer and parses the flags, length…",N,[[["usize"]],[["pduinfo"],[R[2],["pduinfo"]]]]],[5,"parse_universe_list",E,"Takes the given buffer representing the \"List of Universe\"…",N,[[["usize"]],[[R[2],["cow"]],["cow"]]]],[17,"DISCOVERY_UNI_PER_PAGE",E,"The maximum number of universes per page in a universe…",N,N],[17,"E131_DISCOVERY_UNIVERSE",E,"The universe used for universe discovery as defined in…",N,N],[17,"E131_DEFAULT_PRIORITY",E,"The default priority used for the E1.31 packet priority…",N,N],[17,"E131_MAX_PRIORITY",E,"The maximum allowed priority for a E1.31 packet, as per…",N,N],[17,"E131_MULTICAST_IPV4_HIGHEST_BYTE",E,"Value of the highest byte of the IPV4 multicast address as…",N,N],[17,"E131_MULTICAST_IPV4_SECOND_BYTE",E,"Value of the second highest byte of the IPV4 multicast…",N,N],[17,"E131_MAX_MULTICAST_UNIVERSE",E,"The maximum universe number that can be used with the…",N,N],[17,"E131_MIN_MULTICAST_UNIVERSE",E,"The lowest / minimum universe number that can be used with…",N,N],[17,"E131_NO_SYNC_ADDR",E,"The synchronisation address used to indicate that there is…",N,N],[17,"E131_UNIVERSE_DISCOVERY_INTERVAL",E,"The interval between universe discovery packets (adverts)…",N,N],[17,"E131_SEQ_DIFF_DISCARD_LOWER_BOUND",E,"The exclusive lower bound on the different between the…",N,N],[17,"E131_SEQ_DIFF_DISCARD_UPPER_BOUND",E,"The inclusive upper bound on the different between the…",N,N],[17,"E131_PREVIEW_DATA_OPTION_BIT_MASK",E,"The bit mask used to get the preview-data option within…",N,N],[17,"E131_STREAM_TERMINATION_OPTION_BIT_MASK",E,"The bit mask used to get the stream-termination option…",N,N],[17,"E131_FORCE_SYNCHRONISATION_OPTION_BIT_MASK",E,"The bit mask used to get the force-synchronisation option…",N,N],[17,"E131_UNIVERSE_DISCOVERY_LAYER_MIN_LENGTH",E,"The minimum allowed length of the discovery layer of an…",N,N],[17,"E131_UNIVERSE_DISCOVERY_LAYER_MAX_LENGTH",E,"The maximum allowed length of the discovery layer of an…",N,N],[17,"E131_UNIVERSE_SYNC_PACKET_ROOT_LENGTH",E,"The expected value of the root layer length field for a…",N,N],[17,"E131_UNIVERSE_SYNC_PACKET_FRAMING_LAYER_LENGTH",E,"The expected value of the framing layer length field for a…",N,N],[17,"E131_UNIVERSE_DISCOVERY_FRAMING_LAYER_MIN_LENGTH",E,"The minimum expected value of the framing layer length…",N,N],[17,"E131_TERMINATE_STREAM_PACKET_COUNT",E,"The number of stream termination packets sent when a…",N,N],[17,"E131_PDU_LENGTH_FLAGS_LENGTH",E,"The length of the pdu flags and length field in bytes.",N,N],[17,"E131_PDU_FLAGS",E,"The pdu flags expected for an ANSI E1.31-2018 packet as…",N,N],[17,"E131_ROOT_LAYER_VECTOR_LENGTH",E,"The length in bytes of the root layer vector field as per…",N,N],[17,"E131_FRAMING_LAYER_VECTOR_LENGTH",E,"The length in bytes of the E1.31 framing layer vector…",N,N],[17,"E131_PRIORITY_FIELD_LENGTH",E,"The length in bytes of the priority field within an ANSI…",N,N],[17,"E131_SEQ_NUM_FIELD_LENGTH",E,"The length in bytes of the sequence number field within an…",N,N],[17,"E131_OPTIONS_FIELD_LENGTH",E,"The length in bytes of the options field within an ANSI…",N,N],[17,"E131_UNIVERSE_FIELD_LENGTH",E,"The length in bytes of a universe field within an ANSI…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_VECTOR_FIELD_LENGTH",E,"The length in bytes of the Vector field within the DMP…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_ADDRESS_DATA_FIELD_LENGTH",E,"The length in bytes of the \"Address Type and Data Type\"…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_FIRST_PROPERTY_ADDRESS_FIELD_LENGTH",E,"The length in bytes of the \"First Property Address\" field…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_ADDRESS_INCREMENT_FIELD_LENGTH",E,"The length in bytes of the \"Address Increment\" field…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_PROPERTY_VALUE_COUNT_FIELD_LENGTH",E,"The length in bytes of the \"Property value count\" field…",N,N],[17,"E131_DISCOVERY_LAYER_VECTOR_FIELD_LENGTH",E,"The length in bytes of the Vector field in the Universe…",N,N],[17,"E131_DISCOVERY_LAYER_PAGE_FIELD_LENGTH",E,"The length in bytes of the Page field in the Universe…",N,N],[17,"E131_DISCOVERY_LAYER_LAST_PAGE_FIELD_LENGTH",E,"The length in bytes of the Last Page field in the Universe…",N,N],[17,"E131_DMP_LAYER_ADDRESS_DATA_FIELD",E,"The value of the \"Address Type and Data Type\" field within…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_FIRST_PROPERTY_FIELD",E,"The value of the \"First Property Address\" field within an…",N,N],[17,"E131_DATA_PACKET_DMP_LAYER_ADDRESS_INCREMENT",E,"The value of the \"Address Increment\" field within an ANSI…",N,N],[17,"E131_PREAMBLE_SIZE",E,"The size of the ACN root layer preamble, must be 0x0010…",N,N],[17,"E131_POSTAMBLE_SIZE",E,"The size of the ACN root layer postamble, must be 0x0…",N,N],[17,"E131_ACN_PACKET_IDENTIFIER",E,"The E131 ACN packet identifier field value. Must be 0x41…",N,N],[17,"E131_CID_FIELD_LENGTH",E,"The E131 CID field length in bytes as per ANSI E1.31-2018…",N,N],[17,"E131_CID_END_INDEX",E,E,N,N],[17,"E131_SOURCE_NAME_FIELD_LENGTH",E,"The length of the Source Name field in bytes in an ANSI…",N,N],[17,"E131_SYNC_ADDR_FIELD_LENGTH",E,"The length of the Synchronisation Address field in bytes…",N,N],[17,"E131_SYNC_FRAMING_LAYER_SEQ_NUM_FIELD_LENGTH",E,"The length in bytes of the sequence number field within…",N,N],[17,"E131_SYNC_FRAMING_LAYER_RESERVE_FIELD_LENGTH",E,"The length in bytes of the reserved field within the…",N,N],[17,"E131_DISCOVERY_FRAMING_LAYER_RESERVE_FIELD_LENGTH",E,E,N,N],[17,"STARTING_SEQUENCE_NUMBER",E,"The initial/starting sequence number used.",N,N],[17,"VECTOR_ROOT_E131_DATA",E,"The vector field value used to identify the ACN packet as…",N,N],[17,"VECTOR_ROOT_E131_EXTENDED",E,"The vector field value used to identify the packet as an…",N,N],[17,"VECTOR_E131_EXTENDED_SYNCHRONIZATION",E,R[61],N,N],[17,"VECTOR_E131_EXTENDED_DISCOVERY",E,R[61],N,N],[17,"VECTOR_E131_DATA_PACKET",E,R[61],N,N],[17,"VECTOR_DMP_SET_PROPERTY",E,"Used at the DMP layer in E1.31 data packets to identify…",N,N],[17,"VECTOR_UNIVERSE_DISCOVERY_UNIVERSE_LIST",E,"Used at the universe discovery packet universe discovery…",N,N],[17,"ACN_SDT_MULTICAST_PORT",E,"The port number used for the ACN family of protocols and…",N,N],[17,"UNIVERSE_CHANNEL_CAPACITY",E,"The payload capacity for a sacn packet, for DMX data this…",N,N],[17,"NO_SYNC_UNIVERSE",E,"The synchronisation universe/address of packets which do…",N,N],[17,"E131_NETWORK_DATA_LOSS_TIMEOUT",E,"The timeout before data loss is assumed for an E131…",N,N],[17,"UNIVERSE_DISCOVERY_SOURCE_TIMEOUT",E,"The timeout before a discovered source is assumed to be…",N,N],[17,"SOURCE_NAME_INDEX",E,E,N,N],[17,"PRIORITY_INDEX",E,E,N,N],[17,"SYNC_ADDR_INDEX",E,E,N,N],[17,"SEQ_NUM_INDEX",E,E,N,N],[17,"OPTIONS_FIELD_INDEX",E,E,N,N],[17,"UNIVERSE_INDEX",E,E,N,N],[17,"DATA_INDEX",E,E,N,N],[17,"VECTOR_FIELD_INDEX",E,E,N,N],[17,"ADDRESS_DATA_FIELD_INDEX",E,E,N,N],[17,"FIRST_PRIORITY_FIELD_INDEX",E,E,N,N],[17,"ADDRESS_INCREMENT_FIELD_INDEX",E,E,N,N],[17,"PROPERTY_VALUE_COUNT_FIELD_INDEX",E,E,N,N],[17,"PROPERTY_VALUES_FIELD_INDEX",E,E,N,N],[17,"E131_SYNC_FRAMING_LAYER_VECTOR_FIELD_INDEX",E,E,N,N],[17,"E131_SYNC_FRAMING_LAYER_SEQ_NUM_FIELD_INDEX",E,E,N,N],[17,"E131_SYNC_FRAMING_LAYER_SYNC_ADDRESS_FIELD_INDEX",E,E,N,N],[17,"E131_SYNC_FRAMING_LAYER_RESERVE_FIELD_INDEX",E,E,N,N],[17,"E131_SYNC_FRAMING_LAYER_END_INDEX",E,E,N,N],[17,"E131_DISCOVERY_FRAMING_LAYER_VECTOR_FIELD_INDEX",E,E,N,N],[17,"E131_DISCOVERY_FRAMING_LAYER_SOURCE_NAME_FIELD_INDEX",E,E,N,N],[17,"E131_DISCOVERY_FRAMING_LAYER_RESERVE_FIELD_INDEX",E,E,N,N],[17,"E131_DISCOVERY_FRAMING_LAYER_DATA_INDEX",E,E,N,N],[17,"E131_DISCOVERY_LAYER_VECTOR_FIELD_INDEX",E,E,N,N],[17,"E131_DISCOVERY_LAYER_PAGE_FIELD_INDEX",E,E,N,N],[17,"E131_DISCOVERY_LAYER_LAST_PAGE_FIELD_INDEX",E,E,N,N],[17,"E131_DISCOVERY_LAYER_UNIVERSE_LIST_FIELD_INDEX",E,E,N,N],[8,"Pdu",E,E,N,N],[10,"parse",E,E,15,[[],[R[2]]]],[10,"pack",E,E,15,[[["self"]],[R[2]]]],[10,"len",E,E,15,[[["self"]],["usize"]]],[11,"parse",E,"Parse the packet from the given buffer.",6,[[],[[R[62]],[R[2],[R[62]]]]]],[11,"pack_alloc",E,"Packs the packet into heap allocated memory.",6,[[["self"]],[["vec",["u8"]],[R[2],["vec"]]]]],[11,"pack_vec",E,"Packs the packet into the given vector.",6,[[["vec"],["self"]],[R[2]]]],[11,"pack",E,"Packs the packet into the given buffer.",6,[[["self"]],[R[2]]]],[11,"len",E,"The length of the packet when packed.",6,[[["self"]],["usize"]]],[0,"source","sacn","The source module handles generation of sACN on the network.",N,N],[3,R[138],R[116],"A DMX over sACN sender.",N,N],[12,"internal",E,"The DMX source used for actually sending the sACN packets.…",16,N],[12,"update_thread",E,"Update thread which performs actions every…",16,N],[3,R[139],E,"Internal sACN sender, this does most of the work however…",N,N],[12,R[0],E,"Underlying UDP socket used for sending sACN packets on the…",17,N],[12,"addr",E,"The address of this SacnSourceInternal on the network.",17,N],[12,"cid",E,"The unique ID of this SacnSourceInternal. It is the job of…",17,N],[12,"name",E,"The human readable name of this source.",17,N],[12,R[63],E,"Flag which is included in sACN packets to indicate that…",17,N],[12,R[99],E,R[100],17,N],[12,R[101],E,"The sequence numbers used for sync packets, keeps a…",17,N],[12,R[64],E,"A list of the universes registered to send by this source,…",17,N],[12,"running",E,"Flag that indicates if the SacnSourceInternal is running…",17,N],[12,"last_discovery_advert_timestamp",E,"The time that the last universe discovery advert was send.",17,N],[12,"is_sending_discovery",E,"Flag that is set to True to indicate that the source is…",17,N],[5,"unlock_internal",E,R[66],N,[[["arc"]],[[R[65],[R[67]]],[R[2],[R[65]]]]]],[5,"unlock_internal_mut",E,R[66],N,[[["arc"]],[[R[65],[R[67]]],[R[2],[R[65]]]]]],[5,"perform_periodic_update",E,"Called periodically by the source update thread.",N,[[["arc"]],[R[2]]]],[17,"SND_UPDATE_THREAD_NAME",E,"The name of the thread which runs periodically to perform…",N,N],[17,"DEFAULT_TERMINATE_START_CODE",E,"The default startcode used to send stream termination…",N,N],[17,"DEFAULT_POLL_PERIOD",E,"The poll rate of the update thread. Discovery updates are…",N,N],[11,"new_v4",E,R[68],16,[[["str"]],[[R[2],[R[25]]],[R[25]]]]],[11,"with_cid_v4",E,R[69],16,[[["str"],["uuid"]],[[R[2],[R[25]]],[R[25]]]]],[11,"new_v6",E,R[68],16,[[["str"]],[[R[2],[R[25]]],[R[25]]]]],[11,"with_cid_v6",E,R[69],16,[[["str"],["uuid"]],[[R[2],[R[25]]],[R[25]]]]],[11,"with_ip",E,R[69],16,[[["str"],[R[1]]],[[R[2],[R[25]]],[R[25]]]]],[11,R[70],E,"Constructs a new SacnSource with the given name, cid and…",16,[[[R[1]],["str"],["uuid"]],[[R[2],[R[25]]],[R[25]]]]],[11,R[73],E,"Registers the given universes on this source in addition…",16,[[["self"]],[R[2]]]],[11,R[74],E,"Registers a single universe on this source in addition to…",16,[[["self"],["u16"]],[R[2]]]],[11,"send",E,R[76],16,[[["u16"],[R[1]],["self"],["u8"],[R[26],["u8"]],[R[26],[R[1]]],[R[26],["u16"]]],[R[2]]]],[11,R[77],E,R[78],16,[[["self"],["u16"],[R[26],[R[1]]],[R[1]]],[R[2]]]],[11,R[79],E,"Terminates sending on the given universe.",16,[[["self"],["u8"],["u16"]],[R[2]]]],[11,"cid",E,R[80],16,[[["self"]],[["uuid"],[R[2],["uuid"]]]]],[11,"set_cid",E,R[81],16,[[["self"],["uuid"]],[R[2]]]],[11,"name",E,R[82],16,[[["self"]],[[R[2],[R[4]]],[R[4]]]]],[11,R[83],E,R[84],16,[[["self"],["str"]],[R[2]]]],[11,R[85],E,"Returns true if SacnSourceInternal is in preview mode,…",16,[[["self"]],[[R[2],["bool"]],["bool"]]]],[11,R[86],E,R[87],16,[[["self"],["bool"]],[R[2]]]],[11,R[71],E,R[72],16,[[["self"],["bool"]]]],[11,R[90],E,R[91],16,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,R[88],E,R[89],16,[[["self"],["u32"]],[R[2]]]],[11,"ttl",E,R[146],16,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,"set_ttl",E,"Sets the Time To Live for packets sent by this source.",16,[[["self"],["u32"]],[R[2]]]],[11,R[92],E,R[93],16,[[["self"],["bool"]],[R[2]]]],[11,R[94],E,R[95],16,[[["self"]],[[R[2],["bool"]],["bool"]]]],[11,R[64],E,R[147],16,[[["self"]],[[R[2],["vec"]],["vec",["u16"]]]]],[11,R[70],E,"Constructs a new SacnSourceInternal with DMX START code…",17,[[[R[1]],["str"],["uuid"]],[[R[67]],[R[2],[R[67]]]]]],[11,R[71],E,R[72],17,[[["self"],["bool"]]]],[11,R[73],E,"Registers the given array of universes with this source.",17,[[["self"]],[R[2]]]],[11,R[74],E,"Registers the given universe for sending with this source.",17,[[["self"],["u16"]],[R[2]]]],[11,"deregister_universe",E,"De-registers the given universe for sending with this…",17,[[["self"],["u16"]],[R[2]]]],[11,"universe_allowed",E,R[75],17,[[["u16"],["self"]],[R[2]]]],[11,"send",E,R[76],17,[[["self"],[R[1]],["u16"],["u8"],[R[26],["u8"]],[R[26],[R[1]]],[R[26],["u16"]]],[R[2]]]],[11,"send_universe",E,"Sends the given data to the given universe with the given…",17,[[["u8"],["self"],["u16"],[R[26]]],[R[2]]]],[11,R[77],E,R[78],17,[[[R[26],[R[1]]],["self"],["u16"],[R[1]]],[R[2]]]],[11,"send_terminate_stream_pkt",E,"Sends a stream termination packet for the given universe.",17,[[["u8"],[R[26],[R[1]]],["self"],["u16"],[R[1]]],[R[2]]]],[11,R[79],E,"Terminates a universe stream.",17,[[["self"],["u8"],["u16"]],[R[2]]]],[11,"terminate",E,"Terminates the DMX source.",17,[[["self"],["u8"]],[R[2]]]],[11,"send_universe_discovery",E,"Sends a universe discovery packet advertising the…",17,[[["self"]],[R[2]]]],[11,"send_universe_discovery_detailed",E,"Sends a page of a universe discovery packet.",17,[[["u8"],["self"]],[R[2]]]],[11,"cid",E,R[80],17,[[["self"]],["uuid"]]],[11,"set_cid",E,R[81],17,[[["self"],["uuid"]]]],[11,"name",E,R[82],17,[[["self"]],["str"]]],[11,R[83],E,R[84],17,[[["self"],["str"]],[R[2]]]],[11,R[85],E,"Returns if SacnSourceInternal is in preview mode.",17,[[["self"]],["bool"]]],[11,R[86],E,R[87],17,[[["self"],["bool"]]]],[11,R[88],E,R[89],17,[[["self"],["u32"]],[R[2]]]],[11,"ttl",E,R[146],17,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,"set_ttl",E,"Sets the Time To Live for unicast packets sent by this…",17,[[["self"],["u32"]],[R[2]]]],[11,R[90],E,R[91],17,[[["self"]],[[R[2],["u32"]],["u32"]]]],[11,R[92],E,R[93],17,[[["self"],["bool"]],[R[2]]]],[11,R[94],E,R[95],17,[[["self"]],[[R[2],["bool"]],["bool"]]]],[11,R[64],E,R[147],17,[[["self"]],[["vec",["u16"]],["u16"]]]],[0,"receive","sacn","The receive module handles the receiving of sACN on the…",N,N],[3,"DMXData",R[117],"Holds a universes worth of DMX data.",N,N],[12,R[96],E,"The universe that the data was sent to.",18,N],[12,"values",E,"The actual universe data, if less than 512 values in…",18,N],[12,"sync_uni",E,"The universe the data is (or was if now acted upon)…",18,N],[12,R[97],E,"The priority of the data, this may be useful for receivers…",18,N],[12,"src_cid",E,"The unique id of the source of the data, this may be…",18,N],[12,"preview",E,"Indicates if the data is marked as 'preview' data…",18,N],[12,"recv_timestamp",E,"The timestamp that the data was received.",18,N],[3,R[140],E,"Allows receiving dmx or other (different startcode) data…",N,N],[12,"receiver",E,"The SacnNetworkReceiver used for handling communication…",19,N],[12,"waiting_data",E,"Data that hasn't been passed up yet as it is waiting e.g.…",19,N],[12,R[64],E,"Universes that this receiver is currently listening for.",19,N],[12,"discovered_sources",E,"Sacn sources that have been discovered by this receiver…",19,N],[12,"merge_func",E,"The merge function used by this receiver if DMXData for…",19,N],[12,"partially_discovered_sources",E,"Sacn sources that have been partially discovered by only…",19,N],[12,"source_limit",E,"The limit to the number of sources for which to track…",19,N],[12,"sequences",E,"The sequence numbers being tracked by this receiver for…",19,N],[12,"process_preview_data",E,"Flag that indicates if this receiver should process…",19,N],[12,"announce_source_discovery",E,"Flag which indicates if a SourceDiscovered error should be…",19,N],[12,"announce_stream_termination",E,"Flag which indicates if a StreamTerminated error should be…",19,N],[12,"announce_timeout",E,"Flag which indicates if an UniverseTimeout error should be…",19,N],[3,R[141],E,"Represents an sACN source/sender on the network that has…",N,N],[12,"name",E,"The name of the source, no protocol guarantee this will be…",20,N],[12,"last_updated",E,"The time at which the discovered source was last updated /…",20,N],[12,"pages",E,"The pages that have been sent so far by this source when…",20,N],[12,R[98],E,"The last page that will be sent by this source.",20,N],[3,R[142],E,"Used for receiving dmx or other data on a particular…",N,N],[12,R[0],E,"The underlying UDP network socket used.",21,N],[12,"addr",E,"The address that this SacnNetworkReceiver is bound to.",21,N],[12,R[103],E,"If true then this receiver supports multicast, is false…",21,N],[3,R[143],E,"Universe discovery packets are broken down into pages to…",N,N],[12,"page",E,"The page number of this page.",22,N],[12,R[64],E,"The universes that the source is transmitting that are on…",22,N],[3,R[144],E,"Stores a sequence number and a timestamp.",N,N],[12,R[57],E,E,23,N],[12,"last_recv",E,E,23,N],[3,R[145],E,"Stores information about the current expected sequence…",N,N],[12,R[99],E,R[100],24,N],[12,R[101],E,"The sequence numbers used for synchronisation packets,…",24,N],[5,"find_discovered_src",E,"Searches for the discovered source with the given name in…",N,[[["vec"],[R[4]]],[["usize"],[R[26],["usize"]]]]],[5,"create_win_socket",E,"Creates a new Socket2 socket bound to the given address.",N,[[[R[1]]],[[R[2],[R[0]]],[R[0]]]]],[5,"join_win_multicast",E,"Joins the multicast group with the given address using the…",N,[[[R[60]],[R[0]]],[R[2]]]],[5,"leave_win_multicast",E,"Leaves the multicast group with the given address using…",N,[[[R[60]],[R[0]]],[R[2]]]],[5,"check_seq_number",E,"Checks the given sequence number for the given universe…",N,[[["u8"],[R[26],["usize"]],["u16"],["usize"],["hashmap"],["bool"],["uuid"]],[R[2]]]],[5,R[110],E,"Checks the timeouts for all sources and universes for the…",N,[[["hashmap"],[R[104]],["bool"]],[R[2]]]],[5,"remove_source_universe_seq",E,"Removes the sequence number entry from the given sequences…",N,[[["hashmap"],["u16"],["uuid"]],[R[2]]]],[5,"discard_lowest_priority_then_previous",E,"The default merge action for the receiver.",N,[[[R[3]]],[[R[2],[R[3]]],[R[3]]]]],[5,"htp_dmx_merge",E,"Performs a highest takes priority (HTP) (per byte) DMX…",N,[[[R[3]]],[[R[2],[R[3]]],[R[3]]]]],[17,"AF_INET",E,"The libc constants required are not available on many…",N,N],[17,"AF_INET6",E,"Defined as per…",N,N],[17,"RCV_BUF_DEFAULT_SIZE",E,"The default size of the buffer used to receive E1.31…",N,N],[17,"DMX_PAYLOAD_SIZE",E,"DMX payload size in bytes (512 bytes of data + 1 byte…",N,N],[17,"PROCESS_PREVIEW_DATA_DEFAULT",E,"The default value of the process_preview_data flag.",N,N],[17,"ANNOUNCE_SOURCE_DISCOVERY_DEFAULT",E,"The default value of the announce_source_discovery flag.…",N,N],[17,"ANNOUNCE_STREAM_TERMINATION_DEFAULT",E,"The default value of the announce_stream_termination flag.…",N,N],[17,"ANNOUNCE_TIMEOUT_DEFAULT",E,"The default value of the announce_timeout flag.",N,N],[17,"INITIAL_SEQUENCE_NUMBER",E,"The sequence number assigned by the receiver to a new…",N,N],[17,"DEFAULT_MERGE_FUNC",E,"If a packet for a universe is waiting to be synchronised…",N,N],[11,"with_ip",E,"Creates a new SacnReceiver.",19,[[["usize"],[R[26],["usize"]],[R[1]]],[[R[102]],[R[2],[R[102]]]]]],[11,R[107],E,R[108],19,[[["self"],["bool"]],[R[2]]]],[11,R[103],E,R[109],19,[[["self"]],["bool"]]],[11,"reset_sources",E,"Wipes the record of discovered and sequence number tracked…",19,[[["self"]]]],[11,"clear_all_waiting_data",E,"Deletes all data currently waiting to be passed up - e.g.…",19,[[["self"]]]],[11,"clear_waiting_data",E,"Clears data (if any) waiting to be passed up for the…",19,[[["self"],["u16"]],["bool"]]],[11,"set_merge_fn",E,"Sets the merge function to be used by this receiver.",19,[[["self"]],[R[2]]]],[11,"set_ipv6_only",E,"Allow only receiving on Ipv6.",19,[[["self"],["bool"]],[R[2]]]],[11,"listen_universes",E,"Allows receiving from the given universe and starts…",19,[[["self"]],[R[2]]]],[11,"mute_universe",E,"Stops listening to the given universe.",19,[[["self"],["u16"]],[R[2]]]],[11,"set_process_preview_data",E,"Set the process_preview_data flag to the given value.",19,[[["self"],["bool"]]]],[11,"is_listening",E,"Checks if this receiver is currently listening to the…",19,[[["u16"],["self"]],["bool"]]],[11,"recv",E,"Attempt to receive data from any of the registered…",19,[[["self"],[R[26],[R[104]]],[R[104]]],[["vec",[R[3]]],[R[2],["vec"]]]]],[11,"get_announce_source_discovery",E,"Returns the current value of the announce_source_discovery…",19,[[["self"]],["bool"]]],[11,"get_discovered_sources_no_check",E,"Gets all discovered sources without checking if any are…",19,[[["self"]],[["vec",[R[105]]],[R[105]]]]],[11,"get_discovered_sources",E,"Returns a list of the sources that have been discovered on…",19,[[["self"]],[["vec",[R[105]]],[R[105]]]]],[11,"set_announce_source_discovery",E,"Sets the value of the announce_source_discovery flag to…",19,[[["self"],["bool"]]]],[11,"get_announce_timeout",E,"Returns the current value of the announce_timeout flag.…",19,[[["self"]],["bool"]]],[11,"set_announce_timeout",E,"Sets the value of the announce_timeout flag to the given…",19,[[["self"],["bool"]]]],[11,"get_announce_stream_termination",E,"Returns the current value of the…",19,[[["self"]],["bool"]]],[11,"set_announce_stream_termination",E,"Sets the value of the announce_stream_termination flag to…",19,[[["self"],["bool"]]]],[11,"handle_data_packet",E,"Handles the given data packet for this DMX receiver.",19,[[["self"],[R[119]],["uuid"]],[[R[26],["vec"]],[R[2],[R[26]]]]]],[11,R[79],E,"Removes the given universe from the discovered sACN source…",19,[[["self"],["str"],["u16"],["cow",["str"]],["uuid"]]]],[11,"store_waiting_data",E,"Takes the given data and tries to add it to the waiting…",19,[[["self"],[R[3]]],[R[2]]]],[11,"handle_sync_packet",E,"Handles the given synchronisation packet for this DMX…",19,[[["self"],[R[121]],["uuid"]],[[R[26],["vec"]],[R[2],[R[26]]]]]],[11,"rtrv_waiting_data",E,"Retrieves and removes the DMX data of all waiting data…",19,[[["self"],["u16"]],[[R[3]],["vec",[R[3]]]]]],[11,"update_discovered_srcs",E,"Takes the given DiscoveredSacnSource and updates the…",19,[[["self"],[R[105]]]]],[11,"handle_universe_discovery_packet",E,"Handles the given universe discovery packet.",19,[[["self"],[R[122]]],[[R[26],[R[4]]],[R[4]]]]],[11,"check_waiting_data_timeouts",E,"Goes through all the waiting data and removes any which…",19,[[["self"]]]],[11,"remove_expired_sources",E,"Goes through all discovered sources and removes any that…",19,[[["self"]]]],[11,"new",E,"Creates a new DMX receiver on the interface specified by…",21,[[[R[1]]],[[R[2],[R[106]]],[R[106]]]]],[11,"listen_multicast_universe",E,"Connects this SacnNetworkReceiver to the multicast address…",21,[[["self"],["u16"]],[R[2]]]],[11,"mute_multicast_universe",E,"Removes this SacnNetworkReceiver from the multicast group…",21,[[["self"],["u16"]],[R[2]]]],[11,R[107],E,R[108],21,[[["self"],["bool"]],[R[2]]]],[11,R[103],E,R[109],21,[[["self"]],["bool"]]],[11,"set_only_v6",E,"If set to true then only receive over IPv6. If false then…",21,[[["self"],["bool"]],[R[2]]]],[11,"recv",E,"Returns a packet if there is one available.",21,[[["self"]],[[R[62]],[R[2],[R[62]]]]]],[11,"set_timeout",E,"Set the timeout for the recv operation.",21,[[["self"],[R[26],[R[104]]],[R[104]]],[R[2]]]],[11,"is_ipv6",E,"Returns true if this SacnNetworkReceiver is bound to an…",21,[[["self"]],["bool"]]],[11,"has_all_pages",E,"Returns true if all the pages sent by this…",20,[[["self"]],["bool"]]],[11,"get_all_universes",E,"Returns all the universes being send by this SacnSource as…",20,[[["self"]],[["vec",["u16"]],["u16"]]]],[11,"terminate_universe",E,"Removes the given universe from the list of universes…",20,[[["self"],["u16"]]]],[11,"new",E,E,23,[[["u8"],["instant"]],[R[124]]]],[11,"new",E,"Creates a new SequenceNumbering for tracking sequence…",24,[[],["sequencenumbering"]]],[11,"clear",E,"Clears the sequence number records completely removing all…",24,[[["self"]]]],[11,R[110],E,"Checks the timeouts for all packet types, sources and…",24,[[["self"],["bool"]],[R[2]]]],[11,"check_data_seq_number",E,"Checks the sequence number is correct for a data packet…",24,[[["self"],["u8"],[R[26],["usize"]],["u16"],["usize"],["bool"],["uuid"]],[R[2]]]],[11,"check_sync_seq_number",E,"Checks the sequence number is correct for a sync packet…",24,[[["self"],["u8"],[R[26],["usize"]],["u16"],["usize"],["bool"],["uuid"]],[R[2]]]],[11,"remove_seq_numbers",E,"Removes the sequence number tracking for the given source…",24,[[["self"],["u16"],["uuid"]],[R[2]]]],[11,"into",R[111],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[4]]]],[11,R[13],E,E,0,[[[U]],[R[2]]]],[11,R[14],E,E,0,[[],[R[2]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[54],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[4]]]],[11,R[13],E,E,1,[[[U]],[R[2]]]],[11,R[14],E,E,1,[[],[R[2]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[54],E,E,1,[[["self"]],["typeid"]]],[11,"into",R[112],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[4]]]],[11,R[13],E,E,3,[[[U]],[R[2]]]],[11,R[14],E,E,3,[[],[R[2]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[54],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[4]]]],[11,R[13],E,E,4,[[[U]],[R[2]]]],[11,R[14],E,E,4,[[],[R[2]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[54],E,E,4,[[["self"]],["typeid"]]],[11,"into",R[113],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[115],E,E,6,[[["self"]],[T]]],[11,R[114],E,E,6,[[[T],["self"]]]],[11,R[13],E,E,6,[[[U]],[R[2]]]],[11,R[14],E,E,6,[[],[R[2]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[54],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[13],E,E,7,[[[U]],[R[2]]]],[11,R[14],E,E,7,[[],[R[2]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[T]]],[11,R[54],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[115],E,E,8,[[["self"]],[T]]],[11,R[114],E,E,8,[[[T],["self"]]]],[11,R[13],E,E,8,[[[U]],[R[2]]]],[11,R[14],E,E,8,[[],[R[2]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[54],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[115],E,E,9,[[["self"]],[T]]],[11,R[114],E,E,9,[[[T],["self"]]]],[11,R[13],E,E,9,[[[U]],[R[2]]]],[11,R[14],E,E,9,[[],[R[2]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[54],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[115],E,E,10,[[["self"]],[T]]],[11,R[114],E,E,10,[[[T],["self"]]]],[11,R[13],E,E,10,[[[U]],[R[2]]]],[11,R[14],E,E,10,[[],[R[2]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[54],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[115],E,E,11,[[["self"]],[T]]],[11,R[114],E,E,11,[[[T],["self"]]]],[11,R[13],E,E,11,[[[U]],[R[2]]]],[11,R[14],E,E,11,[[],[R[2]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[54],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[115],E,E,12,[[["self"]],[T]]],[11,R[114],E,E,12,[[[T],["self"]]]],[11,R[13],E,E,12,[[[U]],[R[2]]]],[11,R[14],E,E,12,[[],[R[2]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[54],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[115],E,E,13,[[["self"]],[T]]],[11,R[114],E,E,13,[[[T],["self"]]]],[11,R[13],E,E,13,[[[U]],[R[2]]]],[11,R[14],E,E,13,[[],[R[2]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[54],E,E,13,[[["self"]],["typeid"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[115],E,E,14,[[["self"]],[T]]],[11,R[114],E,E,14,[[[T],["self"]]]],[11,R[13],E,E,14,[[[U]],[R[2]]]],[11,R[14],E,E,14,[[],[R[2]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[54],E,E,14,[[["self"]],["typeid"]]],[11,"into",R[116],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[13],E,E,16,[[[U]],[R[2]]]],[11,R[14],E,E,16,[[],[R[2]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[15],E,E,16,[[["self"]],[T]]],[11,R[54],E,E,16,[[["self"]],["typeid"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[13],E,E,17,[[[U]],[R[2]]]],[11,R[14],E,E,17,[[],[R[2]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[15],E,E,17,[[["self"]],[T]]],[11,R[54],E,E,17,[[["self"]],["typeid"]]],[11,"into",R[117],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[115],E,E,18,[[["self"]],[T]]],[11,R[114],E,E,18,[[[T],["self"]]]],[11,R[13],E,E,18,[[[U]],[R[2]]]],[11,R[14],E,E,18,[[],[R[2]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[15],E,E,18,[[["self"]],[T]]],[11,R[54],E,E,18,[[["self"]],["typeid"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[13],E,E,19,[[[U]],[R[2]]]],[11,R[14],E,E,19,[[],[R[2]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[15],E,E,19,[[["self"]],[T]]],[11,R[54],E,E,19,[[["self"]],["typeid"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[115],E,E,20,[[["self"]],[T]]],[11,R[114],E,E,20,[[[T],["self"]]]],[11,R[13],E,E,20,[[[U]],[R[2]]]],[11,R[14],E,E,20,[[],[R[2]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[15],E,E,20,[[["self"]],[T]]],[11,R[54],E,E,20,[[["self"]],["typeid"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[13],E,E,21,[[[U]],[R[2]]]],[11,R[14],E,E,21,[[],[R[2]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[15],E,E,21,[[["self"]],[T]]],[11,R[54],E,E,21,[[["self"]],["typeid"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[115],E,E,22,[[["self"]],[T]]],[11,R[114],E,E,22,[[[T],["self"]]]],[11,R[13],E,E,22,[[[U]],[R[2]]]],[11,R[14],E,E,22,[[],[R[2]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[15],E,E,22,[[["self"]],[T]]],[11,R[54],E,E,22,[[["self"]],["typeid"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[115],E,E,23,[[["self"]],[T]]],[11,R[114],E,E,23,[[[T],["self"]]]],[11,R[13],E,E,23,[[[U]],[R[2]]]],[11,R[14],E,E,23,[[],[R[2]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[15],E,E,23,[[["self"]],[T]]],[11,R[54],E,E,23,[[["self"]],["typeid"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[13],E,E,24,[[[U]],[R[2]]]],[11,R[14],E,E,24,[[],[R[2]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[15],E,E,24,[[["self"]],[T]]],[11,R[54],E,E,24,[[["self"]],["typeid"]]],[11,"parse",R[113],E,8,[[],[[R[118]],[R[2],[R[118]]]]]],[11,"pack",E,E,8,[[["self"]],[R[2]]]],[11,"len",E,E,8,[[["self"]],["usize"]]],[11,"parse",E,E,9,[[],[[R[2],[R[119]]],[R[119]]]]],[11,"pack",E,E,9,[[["self"]],[R[2]]]],[11,"len",E,E,9,[[["self"]],["usize"]]],[11,"parse",E,E,10,[[],[[R[2],[R[120]]],[R[120]]]]],[11,"pack",E,E,10,[[["self"]],[R[2]]]],[11,"len",E,E,10,[[["self"]],["usize"]]],[11,"parse",E,E,11,[[],[[R[2],[R[121]]],[R[121]]]]],[11,"pack",E,E,11,[[["self"]],[R[2]]]],[11,"len",E,E,11,[[["self"]],["usize"]]],[11,"parse",E,E,12,[[],[[R[2],[R[122]]],[R[122]]]]],[11,"pack",E,E,12,[[["self"]],[R[2]]]],[11,"len",E,E,12,[[["self"]],["usize"]]],[11,"parse",E,E,13,[[],[[R[2],[R[123]]],[R[123]]]]],[11,"pack",E,E,13,[[["self"]],[R[2]]]],[11,"len",E,E,13,[[["self"]],["usize"]]],[11,"drop",R[116],E,16,[[["self"]]]],[11,"drop",R[117],E,19,[[["self"]]]],[11,"from",R[111],E,0,[[[R[6]]],["self"]]],[11,"from",E,E,1,[[[R[5]]],["self"]]],[11,"from",E,E,1,[[["str"]],["self"]]],[11,"from",E,E,1,[[[R[4]]],["self"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[[R[4]]],["self"]]],[11,"from",R[112],E,3,[[[R[5]]],["self"]]],[11,"from",E,E,3,[[[R[5]]],["self"]]],[11,"from",E,E,3,[[["utf8error"]],["self"]]],[11,"from",E,E,3,[[["parseerror"]],["self"]]],[11,"from",E,E,3,[[[R[6]]],["self"]]],[11,"from",E,E,4,[[[R[6]]],["self"]]],[11,"from",E,E,4,[[[R[5]]],["self"]]],[11,"from",E,E,4,[[["str"]],["self"]]],[11,"from",E,E,4,[[[R[4]]],["self"]]],[11,"from",E,E,3,[[["str"]],["self"]]],[11,"from",E,E,3,[[[R[4]]],["self"]]],[11,"clone",R[113],E,6,[[["self"]],[R[62]]]],[11,"clone",E,E,14,[[["self"]],[R[127]]]],[11,"clone",E,E,8,[[["self"]],[R[118]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",E,E,10,[[["self"]],["self"]]],[11,"clone",E,E,11,[[["self"]],[R[121]]]],[11,"clone",E,E,12,[[["self"]],["self"]]],[11,"clone",E,E,13,[[["self"]],["self"]]],[11,"clone",R[117],E,20,[[["self"]],[R[105]]]],[11,"clone",E,E,22,[[["self"]],[R[126]]]],[11,"clone",E,E,18,[[["self"]],[R[3]]]],[11,"clone",E,E,23,[[["self"]],[R[124]]]],[11,R[125],R[113],E,6,[[["self"]]]],[11,R[125],E,E,14,[[["self"]]]],[11,R[125],E,E,8,[[["self"]]]],[11,R[125],E,E,9,[[["self"]]]],[11,R[125],E,E,10,[[["self"]]]],[11,R[125],E,E,11,[[["self"]]]],[11,R[125],E,E,12,[[["self"]]]],[11,R[125],E,E,13,[[["self"]]]],[11,R[125],R[117],E,22,[[["self"]]]],[11,"cmp",E,E,22,[[["self"],[R[126]]],[R[128]]]],[11,"cmp",E,E,18,[[["self"]],[R[128]]]],[11,"eq",R[113],E,6,[[[R[62]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[62]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[127]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[127]]],["bool"]]],[11,"eq",E,E,8,[[[R[118]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[118]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[119]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[119]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[120]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[120]]],["bool"]]],[11,"eq",E,E,11,[[[R[121]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[121]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[122]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[122]],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[123]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[123]],["self"]],["bool"]]],[11,"eq",R[117],E,22,[[["self"],[R[126]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[126]]],["bool"]]],[11,"eq",E,E,18,[[["self"]],["bool"]]],[11,R[129],E,E,22,[[["self"],[R[126]]],[[R[128]],[R[26],[R[128]]]]]],[11,"lt",E,E,22,[[["self"],[R[126]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[126]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[126]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[126]]],["bool"]]],[11,R[129],E,E,18,[[["self"]],[[R[128]],[R[26],[R[128]]]]]],[11,"fmt",R[111],E,0,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",R[112],E,3,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",R[111],E,0,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,1,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",R[112],E,3,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,4,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",R[113],E,6,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,14,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,8,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,9,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,10,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,11,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,12,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,13,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",R[116],E,16,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,17,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",R[117],E,18,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,20,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,21,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,22,[[[R[16]],["self"]],[R[2]]]],[11,"fmt",E,E,19,[[[R[16]],["self"]],[R[2]]]],[11,"hash",R[113],E,6,[[["__h"],["self"]]]],[11,"hash",E,E,14,[[["__h"],["self"]]]],[11,"hash",E,E,8,[[["__h"],["self"]]]],[11,"hash",E,E,9,[[["self"],["h"]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,11,[[["__h"],["self"]]]],[11,"hash",E,E,12,[[["self"],["h"]]]],[11,"hash",E,E,13,[[["self"],["h"]]]],[11,R[9],R[111],E,0,[[["self"]],["str"]]],[11,"source",E,E,0,[[["self"]],[[R[26],[R[5]]],[R[5]]]]],[11,R[9],R[112],E,3,[[["self"]],["str"]]],[11,"source",E,E,3,[[["self"]],[[R[26],[R[5]]],[R[5]]]]],[11,"new",R[111],E,0,[[[R[6]],["state"]],[R[5]]]],[11,R[17],E,E,0,[[],["self"]]],[11,R[18],E,E,0,[[["e"],["k"]],["self"]]],[11,"kind",E,E,0,[[["self"]]]],[11,"iter",E,E,0,[[["self"]],["iter"]]],[11,R[8],E,E,0,[[["f"]],["self"]]],[11,R[7],E,E,0,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[55],E,E,0,[[[R[5]]],[[R[26],[R[19]]],[R[19]]]]],[11,"new",R[112],E,3,[[["state"],[R[6]]],[R[5]]]],[11,R[17],E,E,3,[[],["self"]]],[11,R[18],E,E,3,[[["e"],["k"]],["self"]]],[11,"kind",E,E,3,[[["self"]]]],[11,"iter",E,E,3,[[["self"]],["iter"]]],[11,R[8],E,E,3,[[["f"]],["self"]]],[11,R[7],E,E,3,[[["self"]],[[R[7]],[R[26],[R[7]]]]]],[11,R[55],E,E,3,[[[R[5]]],[[R[26],[R[19]]],[R[19]]]]]],"p":[[3,"Error"],[4,R[20]],[8,R[21]],[3,"Error"],[4,R[20]],[8,R[21]],[3,R[130]],[3,"PduInfo"],[3,R[131]],[3,R[132]],[3,R[133]],[3,R[134]],[3,R[135]],[3,R[136]],[4,R[137]],[8,"Pdu"],[3,R[138]],[3,R[139]],[3,"DMXData"],[3,R[140]],[3,R[141]],[3,R[142]],[3,R[143]],[3,R[144]],[3,R[145]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);